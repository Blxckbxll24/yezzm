{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { onErrorDefault, onReadyDefault } from '../util/initial';\nimport { initBrick } from '../util/renderBrick';\nimport { DEBOUNCE_TIME_RENDER } from '../util/constants';\n// /**\n//  * Status Screen Brick allows you to show buyer the status of a purchase made with any payment method provided by Checkout Bricks.\n//  *\n//  * Usage:\n//  *\n//  * ```ts\n//  * import StatusScreen, {initMercadoPago} from '@mercadopago/sdk-react'\n//  *\n//  * initMercadoPago('YOUR_PUBLIC_KEY')\n//  *\n//  * const Example = () => {\n//  *   return(\n//  *     <StatusScreen\n//  *       initialization={{ preferenceId: '<PREFERENCE_ID>'}} // PREFERENCE_ID generated in backend\n//  *       onReady={() => {}} // Callback called when Brick is ready\n//  *       onError={() => {}} // Callback called for all Brick error cases\n//  *     />\n//  *   )\n//  * }\n//  * export default Example\n//  * ```\n//  *\n//  * @see {@link https://www.mercadopago.com/developers/en/docs/checkout-bricks/status-screen-brick/introduction Status Screen Brick documentation} for more information.\n//  */\nconst StatusScreen = ({\n  onReady = onReadyDefault,\n  onError = onErrorDefault,\n  customization,\n  initialization,\n  locale\n}) => {\n  useEffect(() => {\n    // CardPayment uses a debounce to prevent unnecessary reRenders.\n    let timer;\n    const StatusScreenBrickConfig = {\n      settings: {\n        initialization,\n        customization,\n        locale,\n        callbacks: {\n          onReady,\n          onError\n        }\n      },\n      name: 'statusScreen',\n      divId: 'statusScreenBrick_container',\n      controller: 'statusScreenBrickController'\n    };\n    timer = setTimeout(() => {\n      initBrick(StatusScreenBrickConfig);\n    }, DEBOUNCE_TIME_RENDER);\n    return () => {\n      var _a;\n      clearTimeout(timer);\n      (_a = window.statusScreenBrickController) === null || _a === void 0 ? void 0 : _a.unmount();\n    };\n  }, [initialization, customization, onReady, onError]);\n  return React.createElement(\"div\", {\n    id: \"statusScreenBrick_container\"\n  });\n};\nexport default StatusScreen;","map":{"version":3,"names":["React","useEffect","onErrorDefault","onReadyDefault","initBrick","DEBOUNCE_TIME_RENDER","StatusScreen","onReady","onError","customization","initialization","locale","timer","StatusScreenBrickConfig","settings","callbacks","name","divId","controller","setTimeout","_a","clearTimeout","window","statusScreenBrickController","unmount","createElement","id"],"sources":["C:/Users/adela/Desktop/nuevoyeezy/spotifybarato/node_modules/@mercadopago/sdk-react/bricks/statusScreen/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { onErrorDefault, onReadyDefault } from '../util/initial';\r\nimport { initBrick } from '../util/renderBrick';\r\nimport { DEBOUNCE_TIME_RENDER } from '../util/constants';\r\n// /**\r\n//  * Status Screen Brick allows you to show buyer the status of a purchase made with any payment method provided by Checkout Bricks.\r\n//  *\r\n//  * Usage:\r\n//  *\r\n//  * ```ts\r\n//  * import StatusScreen, {initMercadoPago} from '@mercadopago/sdk-react'\r\n//  *\r\n//  * initMercadoPago('YOUR_PUBLIC_KEY')\r\n//  *\r\n//  * const Example = () => {\r\n//  *   return(\r\n//  *     <StatusScreen\r\n//  *       initialization={{ preferenceId: '<PREFERENCE_ID>'}} // PREFERENCE_ID generated in backend\r\n//  *       onReady={() => {}} // Callback called when Brick is ready\r\n//  *       onError={() => {}} // Callback called for all Brick error cases\r\n//  *     />\r\n//  *   )\r\n//  * }\r\n//  * export default Example\r\n//  * ```\r\n//  *\r\n//  * @see {@link https://www.mercadopago.com/developers/en/docs/checkout-bricks/status-screen-brick/introduction Status Screen Brick documentation} for more information.\r\n//  */\r\nconst StatusScreen = ({ onReady = onReadyDefault, onError = onErrorDefault, customization, initialization, locale, }) => {\r\n    useEffect(() => {\r\n        // CardPayment uses a debounce to prevent unnecessary reRenders.\r\n        let timer;\r\n        const StatusScreenBrickConfig = {\r\n            settings: {\r\n                initialization,\r\n                customization,\r\n                locale,\r\n                callbacks: {\r\n                    onReady,\r\n                    onError,\r\n                },\r\n            },\r\n            name: 'statusScreen',\r\n            divId: 'statusScreenBrick_container',\r\n            controller: 'statusScreenBrickController',\r\n        };\r\n        timer = setTimeout(() => {\r\n            initBrick(StatusScreenBrickConfig);\r\n        }, DEBOUNCE_TIME_RENDER);\r\n        return () => {\r\n            var _a;\r\n            clearTimeout(timer);\r\n            (_a = window.statusScreenBrickController) === null || _a === void 0 ? void 0 : _a.unmount();\r\n        };\r\n    }, [initialization, customization, onReady, onError]);\r\n    return React.createElement(\"div\", { id: \"statusScreenBrick_container\" });\r\n};\r\nexport default StatusScreen;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,cAAc,EAAEC,cAAc,QAAQ,iBAAiB;AAChE,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,oBAAoB,QAAQ,mBAAmB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,YAAY,GAAGA,CAAC;EAAEC,OAAO,GAAGJ,cAAc;EAAEK,OAAO,GAAGN,cAAc;EAAEO,aAAa;EAAEC,cAAc;EAAEC;AAAQ,CAAC,KAAK;EACrHV,SAAS,CAAC,MAAM;IACZ;IACA,IAAIW,KAAK;IACT,MAAMC,uBAAuB,GAAG;MAC5BC,QAAQ,EAAE;QACNJ,cAAc;QACdD,aAAa;QACbE,MAAM;QACNI,SAAS,EAAE;UACPR,OAAO;UACPC;QACJ;MACJ,CAAC;MACDQ,IAAI,EAAE,cAAc;MACpBC,KAAK,EAAE,6BAA6B;MACpCC,UAAU,EAAE;IAChB,CAAC;IACDN,KAAK,GAAGO,UAAU,CAAC,MAAM;MACrBf,SAAS,CAACS,uBAAuB,CAAC;IACtC,CAAC,EAAER,oBAAoB,CAAC;IACxB,OAAO,MAAM;MACT,IAAIe,EAAE;MACNC,YAAY,CAACT,KAAK,CAAC;MACnB,CAACQ,EAAE,GAAGE,MAAM,CAACC,2BAA2B,MAAM,IAAI,IAAIH,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACI,OAAO,CAAC,CAAC;IAC/F,CAAC;EACL,CAAC,EAAE,CAACd,cAAc,EAAED,aAAa,EAAEF,OAAO,EAAEC,OAAO,CAAC,CAAC;EACrD,OAAOR,KAAK,CAACyB,aAAa,CAAC,KAAK,EAAE;IAAEC,EAAE,EAAE;EAA8B,CAAC,CAAC;AAC5E,CAAC;AACD,eAAepB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}
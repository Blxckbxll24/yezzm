{"ast":null,"code":"import hex2hsl from './hex2hsl';\nimport hsl2hex from './hsl2hex';\nimport { invariant, isPlainObject, isString, messages } from './modules/utils';\nimport parseCSS from './parse-css';\nimport rotate from './rotate';\nexport default function palette(input, options = {}) {\n  invariant(isString(input), messages.inputString);\n  invariant(isPlainObject(options), messages.options);\n  const {\n    lightness,\n    saturation,\n    size = 6,\n    type\n  } = options;\n  const hsl = hex2hsl(parseCSS(input));\n  const output = [];\n  switch (type) {\n    case 'monochromatic':\n      {\n        const step = 80 / size;\n        for (let index = size; index > 0; index--) {\n          output.push(hsl2hex({\n            ...hsl,\n            l: step * index\n          }));\n        }\n        break;\n      }\n    default:\n      {\n        const step = 360 / size;\n        output.push(hsl2hex({\n          ...hsl,\n          l: lightness || hsl.l,\n          s: saturation || hsl.s\n        }));\n        for (let index = 1; index < size; index++) {\n          const color = rotate(input, hsl.h + step * index);\n          output.push(hsl2hex({\n            ...hex2hsl(color),\n            l: lightness || hsl.l,\n            s: saturation || hsl.s\n          }));\n        }\n        break;\n      }\n  }\n  return output;\n}","map":{"version":3,"names":["hex2hsl","hsl2hex","invariant","isPlainObject","isString","messages","parseCSS","rotate","palette","input","options","inputString","lightness","saturation","size","type","hsl","output","step","index","push","l","s","color","h"],"sources":["C:\\Users\\emmag\\Desktop\\nuevoyeezy\\spotifybarato\\node_modules\\colorizr\\src\\palette.ts"],"sourcesContent":["import hex2hsl from './hex2hsl';\r\nimport hsl2hex from './hsl2hex';\r\nimport { invariant, isPlainObject, isString, messages } from './modules/utils';\r\nimport parseCSS from './parse-css';\r\nimport rotate from './rotate';\r\nimport { PaletteOptions } from './types';\r\n\r\nexport default function palette(input: string, options: PaletteOptions = {}): string[] {\r\n  invariant(isString(input), messages.inputString);\r\n  invariant(isPlainObject(options), messages.options);\r\n\r\n  const { lightness, saturation, size = 6, type } = options;\r\n  const hsl = hex2hsl(parseCSS(input));\r\n  const output: string[] = [];\r\n\r\n  switch (type) {\r\n    case 'monochromatic': {\r\n      const step = 80 / size;\r\n\r\n      for (let index = size; index > 0; index--) {\r\n        output.push(hsl2hex({ ...hsl, l: step * index }));\r\n      }\r\n\r\n      break;\r\n    }\r\n    default: {\r\n      const step = 360 / size;\r\n\r\n      output.push(hsl2hex({ ...hsl, l: lightness || hsl.l, s: saturation || hsl.s }));\r\n\r\n      for (let index = 1; index < size; index++) {\r\n        const color = rotate(input, hsl.h + step * index);\r\n\r\n        output.push(hsl2hex({ ...hex2hsl(color), l: lightness || hsl.l, s: saturation || hsl.s }));\r\n      }\r\n\r\n      break;\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,SAAS,EAAEC,aAAa,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,iBAAiB;AAC9E,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,MAAM,MAAM,UAAU;AAG7B,eAAc,SAAUC,OAAOA,CAACC,KAAa,EAAEC,OAAA,GAA0B,EAAE;EACzER,SAAS,CAACE,QAAQ,CAACK,KAAK,CAAC,EAAEJ,QAAQ,CAACM,WAAW,CAAC;EAChDT,SAAS,CAACC,aAAa,CAACO,OAAO,CAAC,EAAEL,QAAQ,CAACK,OAAO,CAAC;EAEnD,MAAM;IAAEE,SAAS;IAAEC,UAAU;IAAEC,IAAI,GAAG,CAAC;IAAEC;EAAI,CAAE,GAAGL,OAAO;EACzD,MAAMM,GAAG,GAAGhB,OAAO,CAACM,QAAQ,CAACG,KAAK,CAAC,CAAC;EACpC,MAAMQ,MAAM,GAAa,EAAE;EAE3B,QAAQF,IAAI;IACV,KAAK,eAAe;MAAE;QACpB,MAAMG,IAAI,GAAG,EAAE,GAAGJ,IAAI;QAEtB,KAAK,IAAIK,KAAK,GAAGL,IAAI,EAAEK,KAAK,GAAG,CAAC,EAAEA,KAAK,EAAE,EAAE;UACzCF,MAAM,CAACG,IAAI,CAACnB,OAAO,CAAC;YAAE,GAAGe,GAAG;YAAEK,CAAC,EAAEH,IAAI,GAAGC;UAAK,CAAE,CAAC,CAAC;;QAGnD;;IAEF;MAAS;QACP,MAAMD,IAAI,GAAG,GAAG,GAAGJ,IAAI;QAEvBG,MAAM,CAACG,IAAI,CAACnB,OAAO,CAAC;UAAE,GAAGe,GAAG;UAAEK,CAAC,EAAET,SAAS,IAAII,GAAG,CAACK,CAAC;UAAEC,CAAC,EAAET,UAAU,IAAIG,GAAG,CAACM;QAAC,CAAE,CAAC,CAAC;QAE/E,KAAK,IAAIH,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGL,IAAI,EAAEK,KAAK,EAAE,EAAE;UACzC,MAAMI,KAAK,GAAGhB,MAAM,CAACE,KAAK,EAAEO,GAAG,CAACQ,CAAC,GAAGN,IAAI,GAAGC,KAAK,CAAC;UAEjDF,MAAM,CAACG,IAAI,CAACnB,OAAO,CAAC;YAAE,GAAGD,OAAO,CAACuB,KAAK,CAAC;YAAEF,CAAC,EAAET,SAAS,IAAII,GAAG,CAACK,CAAC;YAAEC,CAAC,EAAET,UAAU,IAAIG,GAAG,CAACM;UAAC,CAAE,CAAC,CAAC;;QAG5F;;;EAIJ,OAAOL,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}
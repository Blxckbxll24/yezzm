{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emmag\\\\Desktop\\\\nuevoyeezy\\\\spotifybarato\\\\src\\\\components\\\\reproductor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { WebPlaybackSDK } from 'react-spotify-web-playback-sdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = \"453d6c17658a4a4a8498f17cb1b22b75\";\nconst CLIENT_SECRET = \"6d243006672b46cea52da45f4fa7b0f7\";\nconst Player = () => {\n  _s();\n  const [token, setAccessToken] = useState('');\n  const [trackUri, setTrackUri] = useState(''); // URI de la canción que se reproducirá\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // Obtener token de acceso de Spotify\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.post('tu_endpoint_para_obtener_el_token');\n      setToken(response.data.access_token);\n    };\n    fetchData();\n  }, []);\n  const handlePlay = PLAYBA => {\n    setIsPlaying(true);\n    // Lógica para comenzar la reproducción\n  };\n\n  const handlePause = () => {\n    setIsPlaying(false);\n    // Lógica para pausar la reproducción\n  };\n\n  const handleTrackChange = uri => {\n    // Lógica para cambiar la canción actual\n    setTrackUri(uri);\n  };\n  const handlePlaySpecificSong = () => {\n    const specificSongUri = 'spotify:track:4MjDJD8cW7iVeWInc2Bdy';\n    const playbackInstance = {\n      uris: [specificSongUri]\n    };\n    handleTrackChange(specificSongUri);\n    handlePlay(playbackInstance); // Inicia la reproducción después de cambiar la canción\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Nombre de la canci\\xF3n - Artista\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WebPlaybackSDK, {\n      token: token,\n      uris: trackUri ? [trackUri] : [] // Puedes proporcionar un array de URIs de canciones para reproducir\n      ,\n      callback: state => {\n        if (!state.isPlaying) {\n          // Lógica para manejar la pausa de la canción\n        }\n      },\n      play: handlePlay,\n      pause: handlePause,\n      showSaveIcon: true,\n      callback: state => {\n        if (!state.isPlaying) {\n          // Lógica para manejar la pausa de la canción\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlaySpecificSong,\n      children: \"Reproducir canci\\xF3n espec\\xEDfica\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Player, \"HVMYcmnh08SuxNRUNMM7B+qvNiM=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useEffect","axios","WebPlaybackSDK","jsxDEV","_jsxDEV","CLIENT_ID","CLIENT_SECRET","Player","_s","token","setAccessToken","trackUri","setTrackUri","isPlaying","setIsPlaying","fetchData","response","post","setToken","data","access_token","handlePlay","PLAYBA","handlePause","handleTrackChange","uri","handlePlaySpecificSong","specificSongUri","playbackInstance","uris","children","fileName","_jsxFileName","lineNumber","columnNumber","callback","state","play","pause","showSaveIcon","onClick","_c","$RefreshReg$"],"sources":["C:/Users/emmag/Desktop/nuevoyeezy/spotifybarato/src/components/reproductor.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { WebPlaybackSDK } from 'react-spotify-web-playback-sdk';\r\n\r\nconst CLIENT_ID = \"453d6c17658a4a4a8498f17cb1b22b75\";\r\nconst CLIENT_SECRET = \"6d243006672b46cea52da45f4fa7b0f7\";\r\n\r\n\r\nconst Player = () => {\r\n  const [token, setAccessToken] = useState('');\r\n  const [trackUri, setTrackUri] = useState(''); // URI de la canción que se reproducirá\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n// Obtener token de acceso de Spotify\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.post('tu_endpoint_para_obtener_el_token');\r\n      setToken(response.data.access_token);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  const handlePlay = (PLAYBA) => {\r\n    setIsPlaying(true);\r\n    // Lógica para comenzar la reproducción\r\n  };\r\n\r\n  const handlePause = () => {\r\n    setIsPlaying(false);\r\n    // Lógica para pausar la reproducción\r\n  };\r\n\r\n  const handleTrackChange = (uri) => {\r\n    // Lógica para cambiar la canción actual\r\n    setTrackUri(uri);\r\n  };\r\n  const handlePlaySpecificSong = () => {\r\n    const specificSongUri = 'spotify:track:4MjDJD8cW7iVeWInc2Bdy';\r\n    const playbackInstance = {\r\n      uris: [specificSongUri],\r\n    };\r\n    handleTrackChange(specificSongUri);\r\n    handlePlay(playbackInstance); // Inicia la reproducción después de cambiar la canción\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Puedes agregar información sobre la canción actual, como título, artista, etc. */}\r\n      <h3>Nombre de la canción - Artista</h3>\r\n\r\n      {/* Componente de reproductor de Spotify */}\r\n      <WebPlaybackSDK\r\n        token={token}\r\n        uris={trackUri ? [trackUri] : []} // Puedes proporcionar un array de URIs de canciones para reproducir\r\n        callback={(state) => {\r\n          if (!state.isPlaying) {\r\n            // Lógica para manejar la pausa de la canción\r\n          }\r\n        }}\r\n        play={handlePlay}\r\n        pause={handlePause}\r\n        showSaveIcon\r\n        callback={(state) => {\r\n            if (!state.isPlaying) {\r\n              // Lógica para manejar la pausa de la canción\r\n            }\r\n        }}\r\n      />\r\n      <button onClick={handlePlaySpecificSong}>Reproducir canción específica</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,SAAS,GAAG,kCAAkC;AACpD,MAAMC,aAAa,GAAG,kCAAkC;AAGxD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,mCAAmC,CAAC;MACtEC,QAAQ,CAACF,QAAQ,CAACG,IAAI,CAACC,YAAY,CAAC;IACtC,CAAC;IAEDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMM,UAAU,GAAIC,MAAM,IAAK;IAC7BR,YAAY,CAAC,IAAI,CAAC;IAClB;EACF,CAAC;;EAED,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBT,YAAY,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED,MAAMU,iBAAiB,GAAIC,GAAG,IAAK;IACjC;IACAb,WAAW,CAACa,GAAG,CAAC;EAClB,CAAC;EACD,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;IACnC,MAAMC,eAAe,GAAG,qCAAqC;IAC7D,MAAMC,gBAAgB,GAAG;MACvBC,IAAI,EAAE,CAACF,eAAe;IACxB,CAAC;IACDH,iBAAiB,CAACG,eAAe,CAAC;IAClCN,UAAU,CAACO,gBAAgB,CAAC,CAAC,CAAC;EAChC,CAAC;;EAED,oBACExB,OAAA;IAAA0B,QAAA,gBAEE1B,OAAA;MAAA0B,QAAA,EAAI;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGvC9B,OAAA,CAACF,cAAc;MACbO,KAAK,EAAEA,KAAM;MACboB,IAAI,EAAElB,QAAQ,GAAG,CAACA,QAAQ,CAAC,GAAG,EAAG,CAAC;MAAA;MAClCwB,QAAQ,EAAGC,KAAK,IAAK;QACnB,IAAI,CAACA,KAAK,CAACvB,SAAS,EAAE;UACpB;QAAA;MAEJ,CAAE;MACFwB,IAAI,EAAEhB,UAAW;MACjBiB,KAAK,EAAEf,WAAY;MACnBgB,YAAY;MACZJ,QAAQ,EAAGC,KAAK,IAAK;QACjB,IAAI,CAACA,KAAK,CAACvB,SAAS,EAAE;UACpB;QAAA;MAEN;IAAE;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACF9B,OAAA;MAAQoC,OAAO,EAAEd,sBAAuB;MAAAI,QAAA,EAAC;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5E,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAjEID,MAAM;AAAAkC,EAAA,GAANlC,MAAM;AAmEZ,eAAeA,MAAM;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
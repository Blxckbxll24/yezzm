{"ast":null,"code":"import hue2rgb from './modules/hue2rgb';\nimport { invariant, isHSL, messages, round } from './modules/utils';\n/**\r\n * Convert an HSL object to RGB.\r\n */\nexport default function hsl2rgb(input) {\n  invariant(!!input, messages.inputString);\n  invariant(isHSL(input), 'invalid input');\n  const h = round(input.h) / 360;\n  const s = round(input.s) / 100;\n  const l = round(input.l) / 100;\n  let r;\n  let g;\n  let b;\n  let point;\n  let chroma;\n  if (s === 0) {\n    r = l;\n    g = l;\n    b = l;\n  } else {\n    chroma = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    point = 2 * l - chroma;\n    r = hue2rgb(point, chroma, h + 1 / 3);\n    g = hue2rgb(point, chroma, h);\n    b = hue2rgb(point, chroma, h - 1 / 3);\n  }\n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255)\n  };\n}","map":{"version":3,"names":["hue2rgb","invariant","isHSL","messages","round","hsl2rgb","input","inputString","h","s","l","r","g","b","point","chroma","Math"],"sources":["C:\\Users\\emmag\\Desktop\\nuevoyeezy\\spotifybarato\\node_modules\\colorizr\\src\\hsl2rgb.ts"],"sourcesContent":["import hue2rgb from './modules/hue2rgb';\r\nimport { invariant, isHSL, messages, round } from './modules/utils';\r\nimport { HSL, RGB } from './types';\r\n\r\n/**\r\n * Convert an HSL object to RGB.\r\n */\r\nexport default function hsl2rgb(input: HSL): RGB {\r\n  invariant(!!input, messages.inputString);\r\n\r\n  invariant(isHSL(input), 'invalid input');\r\n\r\n  const h = round(input.h) / 360;\r\n  const s = round(input.s) / 100;\r\n  const l = round(input.l) / 100;\r\n\r\n  let r;\r\n  let g;\r\n  let b;\r\n\r\n  let point;\r\n  let chroma;\r\n\r\n  if (s === 0) {\r\n    r = l;\r\n    g = l;\r\n    b = l;\r\n  } else {\r\n    chroma = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n    point = 2 * l - chroma;\r\n\r\n    r = hue2rgb(point, chroma, h + 1 / 3);\r\n    g = hue2rgb(point, chroma, h);\r\n    b = hue2rgb(point, chroma, h - 1 / 3);\r\n  }\r\n\r\n  return {\r\n    r: Math.round(r * 255),\r\n    g: Math.round(g * 255),\r\n    b: Math.round(b * 255),\r\n  };\r\n}\r\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,mBAAmB;AACvC,SAASC,SAAS,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,iBAAiB;AAGnE;;;AAGA,eAAc,SAAUC,OAAOA,CAACC,KAAU;EACxCL,SAAS,CAAC,CAAC,CAACK,KAAK,EAAEH,QAAQ,CAACI,WAAW,CAAC;EAExCN,SAAS,CAACC,KAAK,CAACI,KAAK,CAAC,EAAE,eAAe,CAAC;EAExC,MAAME,CAAC,GAAGJ,KAAK,CAACE,KAAK,CAACE,CAAC,CAAC,GAAG,GAAG;EAC9B,MAAMC,CAAC,GAAGL,KAAK,CAACE,KAAK,CAACG,CAAC,CAAC,GAAG,GAAG;EAC9B,MAAMC,CAAC,GAAGN,KAAK,CAACE,KAAK,CAACI,CAAC,CAAC,GAAG,GAAG;EAE9B,IAAIC,CAAC;EACL,IAAIC,CAAC;EACL,IAAIC,CAAC;EAEL,IAAIC,KAAK;EACT,IAAIC,MAAM;EAEV,IAAIN,CAAC,KAAK,CAAC,EAAE;IACXE,CAAC,GAAGD,CAAC;IACLE,CAAC,GAAGF,CAAC;IACLG,CAAC,GAAGH,CAAC;GACN,MAAM;IACLK,MAAM,GAAGL,CAAC,GAAG,GAAG,GAAGA,CAAC,IAAI,CAAC,GAAGD,CAAC,CAAC,GAAGC,CAAC,GAAGD,CAAC,GAAGC,CAAC,GAAGD,CAAC;IAC9CK,KAAK,GAAG,CAAC,GAAGJ,CAAC,GAAGK,MAAM;IAEtBJ,CAAC,GAAGX,OAAO,CAACc,KAAK,EAAEC,MAAM,EAAEP,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACrCI,CAAC,GAAGZ,OAAO,CAACc,KAAK,EAAEC,MAAM,EAAEP,CAAC,CAAC;IAC7BK,CAAC,GAAGb,OAAO,CAACc,KAAK,EAAEC,MAAM,EAAEP,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;EAGvC,OAAO;IACLG,CAAC,EAAEK,IAAI,CAACZ,KAAK,CAACO,CAAC,GAAG,GAAG,CAAC;IACtBC,CAAC,EAAEI,IAAI,CAACZ,KAAK,CAACQ,CAAC,GAAG,GAAG,CAAC;IACtBC,CAAC,EAAEG,IAAI,CAACZ,KAAK,CAACS,CAAC,GAAG,GAAG;GACtB;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}
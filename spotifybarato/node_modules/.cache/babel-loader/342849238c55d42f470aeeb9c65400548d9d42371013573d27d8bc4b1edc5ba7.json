{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emmag\\\\Desktop\\\\cosas\\\\spotify_JNCR\\\\spotifybarato\\\\src\\\\pages\\\\buscador.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../styles/buscador.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = \"453d6c17658a4a4a8498f17cb1b22b75\";\nconst CLIENT_SECRET = \"6d243006672b46cea52da45f4fa7b0f7\";\nconst sinFotoImage = require('../images/sinimagen.png');\nfunction Buscador() {\n  _s();\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [results, setResults] = useState({});\n  const [genres, setGenres] = useState([]);\n  const [showGenres, setShowGenres] = useState(true);\n  const [showResults, setShowResults] = useState(false); // Nuevo estado\n\n  useEffect(() => {\n    // Recuperar géneros desde el almacenamiento local\n    const storedGenres = localStorage.getItem('storedGenres');\n    if (storedGenres) {\n      setGenres(JSON.parse(storedGenres));\n    } else {\n      getGenres();\n    }\n  }, []);\n  const getGenres = () => {\n    if (!accessToken) {\n      return;\n    }\n    var genreParameters = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + accessToken\n      }\n    };\n    fetch('https://api.spotify.com/v1/recommendations/available-genre-seeds', genreParameters).then(response => response.json()).then(data => {\n      setGenres(data.genres);\n      // Almacenar géneros en el almacenamiento local\n      localStorage.setItem('storedGenres', JSON.stringify(data.genres));\n      // Mostrar los géneros al cargar\n      setShowGenres(true);\n    });\n  };\n  useEffect(() => {\n    var authParameters = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: 'grant_type=client_credentials&client_id=' + CLIENT_ID + '&client_secret=' + CLIENT_SECRET\n    };\n    fetch('https://accounts.spotify.com/api/token', authParameters).then(result => result.json()).then(data => setAccessToken(data.access_token));\n  }, []);\n  useEffect(() => {\n    search();\n  }, [searchInput, accessToken]);\n  async function search() {\n    if (!accessToken || searchInput.trim() === \"\") {\n      setResults({});\n      setShowResults(false); // Ocultar resultados cuando no hay búsqueda\n      setShowGenres(true); // Mostrar géneros en lugar de resultados\n      return;\n    }\n    setShowResults(true); // Mostrar resultados cuando se realiza una búsqueda\n    setShowGenres(false); // Ocultar géneros\n\n    // Resto del código de búsqueda\n    var searchParameters = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + accessToken\n      }\n    };\n    var artistsData = await fetch('https://api.spotify.com/v1/search?q=' + searchInput + '&type=artist', searchParameters).then(response => response.json()).then(data => data.artists.items);\n    var songsData = await fetch('https://api.spotify.com/v1/search?q=' + searchInput + '&type=track', searchParameters).then(response => response.json()).then(data => data.tracks.items);\n    var albumsData = await fetch('https://api.spotify.com/v1/search?q=' + searchInput + '&type=album', searchParameters).then(response => response.json()).then(data => data.albums.items);\n    var playlistsData = await fetch('https://api.spotify.com/v1/search?q=' + searchInput + '&type=playlist', searchParameters).then(response => response.json()).then(data => data.playlists.items);\n    setResults({\n      artists: artistsData,\n      songs: songsData,\n      albums: albumsData,\n      playlists: playlistsData\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"input\",\n        className: \"search-input\",\n        placeholder: \"Search for artists, songs, albums, or playlists\",\n        value: searchInput,\n        onChange: event => setSearchInput(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: [showGenres && genres.map((genre, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-card\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"result-title\",\n          children: genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this)), showResults &&\n      /*#__PURE__*/\n      // Mostrar resultados si showResults es verdadero\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Artists\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this), results.artists && results.artists.map((result, i) => {\n            var _result$images, _result$images$;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"result-image\",\n                src: ((_result$images = result.images) === null || _result$images === void 0 ? void 0 : (_result$images$ = _result$images[0]) === null || _result$images$ === void 0 ? void 0 : _result$images$.url) || sinFotoImage,\n                alt: result.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"result-title\",\n                children: result.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 37\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Songs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this), results.songs && results.songs.map((result, i) => {\n            var _result$album, _result$album$images, _result$album$images$;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"result-image\",\n                src: ((_result$album = result.album) === null || _result$album === void 0 ? void 0 : (_result$album$images = _result$album.images) === null || _result$album$images === void 0 ? void 0 : (_result$album$images$ = _result$album$images[0]) === null || _result$album$images$ === void 0 ? void 0 : _result$album$images$.url) || sinFotoImage,\n                alt: result.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"result-title\",\n                children: result.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 37\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Albums\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this), results.albums && results.albums.map((result, i) => {\n            var _result$images2, _result$images2$;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"result-image\",\n                src: ((_result$images2 = result.images) === null || _result$images2 === void 0 ? void 0 : (_result$images2$ = _result$images2[0]) === null || _result$images2$ === void 0 ? void 0 : _result$images2$.url) || sinFotoImage,\n                alt: result.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"result-title\",\n                children: result.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 37\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Playlists\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this), results.playlists && results.playlists.map((result, i) => {\n            var _result$images3, _result$images3$;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"result-image\",\n                src: ((_result$images3 = result.images) === null || _result$images3 === void 0 ? void 0 : (_result$images3$ = _result$images3[0]) === null || _result$images3$ === void 0 ? void 0 : _result$images3$.url) || sinFotoImage,\n                alt: result.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"result-title\",\n                children: result.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 37\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n}\n_s(Buscador, \"yGNkdlSOrw5Dy7LQy61maUHIaY8=\");\n_c = Buscador;\nexport default Buscador;\nvar _c;\n$RefreshReg$(_c, \"Buscador\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CLIENT_ID","CLIENT_SECRET","sinFotoImage","require","Buscador","_s","searchInput","setSearchInput","accessToken","setAccessToken","results","setResults","genres","setGenres","showGenres","setShowGenres","showResults","setShowResults","storedGenres","localStorage","getItem","JSON","parse","getGenres","genreParameters","method","headers","fetch","then","response","json","data","setItem","stringify","authParameters","body","result","access_token","search","trim","searchParameters","artistsData","artists","items","songsData","tracks","albumsData","albums","playlistsData","playlists","songs","className","children","type","placeholder","value","onChange","event","target","fileName","_jsxFileName","lineNumber","columnNumber","map","genre","index","i","_result$images","_result$images$","src","images","url","alt","name","_result$album","_result$album$images","_result$album$images$","album","_result$images2","_result$images2$","_result$images3","_result$images3$","_c","$RefreshReg$"],"sources":["C:/Users/emmag/Desktop/cosas/spotify_JNCR/spotifybarato/src/pages/buscador.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../styles/buscador.css';\r\n\r\nconst CLIENT_ID = \"453d6c17658a4a4a8498f17cb1b22b75\";\r\nconst CLIENT_SECRET = \"6d243006672b46cea52da45f4fa7b0f7\";\r\nconst sinFotoImage = require('../images/sinimagen.png');\r\n\r\nfunction Buscador() {\r\n    const [searchInput, setSearchInput] = useState(\"\");\r\n    const [accessToken, setAccessToken] = useState(\"\");\r\n    const [results, setResults] = useState({});\r\n    const [genres, setGenres] = useState([]);\r\n    const [showGenres, setShowGenres] = useState(true);\r\n    const [showResults, setShowResults] = useState(false); // Nuevo estado\r\n\r\n    useEffect(() => {\r\n        // Recuperar géneros desde el almacenamiento local\r\n        const storedGenres = localStorage.getItem('storedGenres');\r\n        if (storedGenres) {\r\n            setGenres(JSON.parse(storedGenres));\r\n        } else {\r\n            getGenres();\r\n        }\r\n    }, []);\r\n\r\n    const getGenres = () => {\r\n        if (!accessToken) {\r\n            return;\r\n        }\r\n\r\n        var genreParameters = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + accessToken\r\n            }\r\n        };\r\n\r\n        fetch('https://api.spotify.com/v1/recommendations/available-genre-seeds', genreParameters)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setGenres(data.genres);\r\n                // Almacenar géneros en el almacenamiento local\r\n                localStorage.setItem('storedGenres', JSON.stringify(data.genres));\r\n                // Mostrar los géneros al cargar\r\n                setShowGenres(true);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        var authParameters = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            body: 'grant_type=client_credentials&client_id=' + CLIENT_ID + '&client_secret=' + CLIENT_SECRET\r\n        };\r\n        fetch('https://accounts.spotify.com/api/token', authParameters)\r\n            .then(result => result.json())\r\n            .then(data => setAccessToken(data.access_token));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        search();\r\n    }, [searchInput, accessToken]);\r\n\r\n    async function search() {\r\n        if (!accessToken || searchInput.trim() === \"\") {\r\n            setResults({});\r\n            setShowResults(false); // Ocultar resultados cuando no hay búsqueda\r\n            setShowGenres(true); // Mostrar géneros en lugar de resultados\r\n            return;\r\n        }\r\n\r\n        setShowResults(true); // Mostrar resultados cuando se realiza una búsqueda\r\n        setShowGenres(false); // Ocultar géneros\r\n\r\n        // Resto del código de búsqueda\r\n        var searchParameters = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + accessToken\r\n            }\r\n        };\r\n\r\n        var artistsData = await fetch('https://api.spotify.com/v1/search?q=' + searchInput + '&type=artist', searchParameters)\r\n            .then(response => response.json())\r\n            .then(data => data.artists.items);\r\n\r\n        var songsData = await fetch('https://api.spotify.com/v1/search?q=' + searchInput + '&type=track', searchParameters)\r\n            .then(response => response.json())\r\n            .then(data => data.tracks.items);\r\n\r\n        var albumsData = await fetch('https://api.spotify.com/v1/search?q=' + searchInput + '&type=album', searchParameters)\r\n            .then(response => response.json())\r\n            .then(data => data.albums.items);\r\n\r\n        var playlistsData = await fetch('https://api.spotify.com/v1/search?q=' + searchInput + '&type=playlist', searchParameters)\r\n            .then(response => response.json())\r\n            .then(data => data.playlists.items);\r\n\r\n        setResults({ artists: artistsData, songs: songsData, albums: albumsData, playlists: playlistsData });\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n            <div className=\"search-container\">\r\n                <input\r\n                    type=\"input\"\r\n                    className=\"search-input\"\r\n                    placeholder='Search for artists, songs, albums, or playlists'\r\n                    value={searchInput}\r\n                    onChange={event => setSearchInput(event.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"results-container\">\r\n                {showGenres && genres.map((genre, index) => (\r\n                    <div className=\"result-card\" key={index}>\r\n                        <p className=\"result-title\">{genre}</p>\r\n                    </div>\r\n                ))}\r\n                {showResults && ( // Mostrar resultados si showResults es verdadero\r\n                    <div>\r\n                        <div className=\"result-row\">\r\n                            <h2>Artists</h2>\r\n                            {results.artists && results.artists.map((result, i) => (\r\n                                <div className=\"result-card\" key={i}>\r\n                                    <img\r\n                                        className=\"result-image\"\r\n                                        src={result.images?.[0]?.url || sinFotoImage}\r\n                                        alt={result.name}\r\n                                    />\r\n                                    <p className=\"result-title\">{result.name}</p>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        <div className=\"result-row\">\r\n                            <h2>Songs</h2>\r\n                            {results.songs && results.songs.map((result, i) => (\r\n                                <div className=\"result-card\" key={i}>\r\n                                    <img\r\n                                        className=\"result-image\"\r\n                                        src={result.album?.images?.[0]?.url || sinFotoImage}\r\n                                        alt={result.name}\r\n                                    />\r\n                                    <p className=\"result-title\">{result.name}</p>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        <div className=\"result-row\">\r\n                            <h2>Albums</h2>\r\n                            {results.albums && results.albums.map((result, i) => (\r\n                                <div className=\"result-card\" key={i}>\r\n                                    <img\r\n                                        className=\"result-image\"\r\n                                        src={result.images?.[0]?.url || sinFotoImage}\r\n                                        alt={result.name}\r\n                                    />\r\n                                    <p className=\"result-title\">{result.name}</p>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        <div className=\"result-row\">\r\n                            <h2>Playlists</h2>\r\n                            {results.playlists && results.playlists.map((result, i) => (\r\n                                <div className=\"result-card\" key={i}>\r\n                                    <img\r\n                                        className=\"result-image\"\r\n                                        src={result.images?.[0]?.url || sinFotoImage}\r\n                                        alt={result.name}\r\n                                    />\r\n                                    <p className=\"result-title\">{result.name}</p>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Buscador;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emmag\\\\Desktop\\\\cosas\\\\spotify_JNCR\\\\spotifybarato\\\\src\\\\pages\\\\reproductor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport SpotifyPlayer from 'react-spotify-web-playback';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Player = () => {\n  _s();\n  const [token, setToken] = useState(''); // Estado para almacenar el token de acceso\n  const [trackUri, setTrackUri] = useState(''); // Estado para almacenar el URI de la canción que se va a reproducir\n\n  useEffect(() => {\n    // Lógica para obtener el token de acceso de Spotify\n    const fetchToken = async () => {\n      const response = await fetch('TU_RUTA_PARA_OBTENER_EL_TOKEN_DE_ACCESO_DE_SPOTIFY');\n      const data = await response.json();\n      setToken(data.access_token);\n    };\n    fetchToken();\n  }, []);\n  const handlePlay = ({\n    spotify_uri\n  }) => {\n    setTrackUri(spotify_uri); // Actualizar el estado del URI de la canción que se va a reproducir\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handlePlay({\n        spotify_uri: 'spotify:track:TU_ID_DE_CANCION'\n      }),\n      children: \"Reproducir canci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), token && /*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n      token: token,\n      uris: trackUri ? [trackUri] : []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Player, \"TdzQlN/yAjeECn/9X5Bi9yeQunA=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useEffect","useState","SpotifyPlayer","jsxDEV","_jsxDEV","Player","_s","token","setToken","trackUri","setTrackUri","fetchToken","response","fetch","data","json","access_token","handlePlay","spotify_uri","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","uris","_c","$RefreshReg$"],"sources":["C:/Users/emmag/Desktop/cosas/spotify_JNCR/spotifybarato/src/pages/reproductor.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport SpotifyPlayer from 'react-spotify-web-playback';\r\n\r\nconst Player = () => {\r\n  const [token, setToken] = useState(''); // Estado para almacenar el token de acceso\r\n  const [trackUri, setTrackUri] = useState(''); // Estado para almacenar el URI de la canción que se va a reproducir\r\n\r\n  useEffect(() => {\r\n    // Lógica para obtener el token de acceso de Spotify\r\n    const fetchToken = async () => {\r\n      const response = await fetch('TU_RUTA_PARA_OBTENER_EL_TOKEN_DE_ACCESO_DE_SPOTIFY');\r\n      const data = await response.json();\r\n      setToken(data.access_token);\r\n    };\r\n\r\n    fetchToken();\r\n  }, []);\r\n\r\n  const handlePlay = ({ spotify_uri }) => {\r\n    setTrackUri(spotify_uri); // Actualizar el estado del URI de la canción que se va a reproducir\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => handlePlay({ spotify_uri: 'spotify:track:TU_ID_DE_CANCION' })}>Reproducir canción</button>\r\n      {token && <SpotifyPlayer token={token} uris={trackUri ? [trackUri] : []} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oDAAoD,CAAC;MAClF,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCP,QAAQ,CAACM,IAAI,CAACE,YAAY,CAAC;IAC7B,CAAC;IAEDL,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,UAAU,GAAGA,CAAC;IAAEC;EAAY,CAAC,KAAK;IACtCR,WAAW,CAACQ,WAAW,CAAC,CAAC,CAAC;EAC5B,CAAC;;EAED,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAQgB,OAAO,EAAEA,CAAA,KAAMH,UAAU,CAAC;QAAEC,WAAW,EAAE;MAAiC,CAAC,CAAE;MAAAC,QAAA,EAAC;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAChHjB,KAAK,iBAAIH,OAAA,CAACF,aAAa;MAACK,KAAK,EAAEA,KAAM;MAACkB,IAAI,EAAEhB,QAAQ,GAAG,CAACA,QAAQ,CAAC,GAAG;IAAG;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AAEV,CAAC;AAAClB,EAAA,CAzBID,MAAM;AAAAqB,EAAA,GAANrB,MAAM;AA2BZ,eAAeA,MAAM;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}